//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MastermindGameGUI.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        bool Login(string playerName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Login", ReplyAction="http://tempuri.org/IService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string playerName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Logout", ReplyAction="http://tempuri.org/IService/LogoutResponse")]
        void Logout(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Logout", ReplyAction="http://tempuri.org/IService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterNewPlayer", ReplyAction="http://tempuri.org/IService/RegisterNewPlayerResponse")]
        bool RegisterNewPlayer(string name, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RegisterNewPlayer", ReplyAction="http://tempuri.org/IService/RegisterNewPlayerResponse")]
        System.Threading.Tasks.Task<bool> RegisterNewPlayerAsync(string name, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRoomList", ReplyAction="http://tempuri.org/IService/GetRoomListResponse")]
        string[] GetRoomList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRoomList", ReplyAction="http://tempuri.org/IService/GetRoomListResponse")]
        System.Threading.Tasks.Task<string[]> GetRoomListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetListOfPlayers", ReplyAction="http://tempuri.org/IService/GetListOfPlayersResponse")]
        string[] GetListOfPlayers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetListOfPlayers", ReplyAction="http://tempuri.org/IService/GetListOfPlayersResponse")]
        System.Threading.Tasks.Task<string[]> GetListOfPlayersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPlayersInRoom", ReplyAction="http://tempuri.org/IService/GetPlayersInRoomResponse")]
        string[] GetPlayersInRoom(string RoomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPlayersInRoom", ReplyAction="http://tempuri.org/IService/GetPlayersInRoomResponse")]
        System.Threading.Tasks.Task<string[]> GetPlayersInRoomAsync(string RoomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PlayerJoinRoom", ReplyAction="http://tempuri.org/IService/PlayerJoinRoomResponse")]
        bool PlayerJoinRoom(string playerName, string roomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PlayerJoinRoom", ReplyAction="http://tempuri.org/IService/PlayerJoinRoomResponse")]
        System.Threading.Tasks.Task<bool> PlayerJoinRoomAsync(string playerName, string roomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PlayerCreateRoom", ReplyAction="http://tempuri.org/IService/PlayerCreateRoomResponse")]
        void PlayerCreateRoom(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PlayerCreateRoom", ReplyAction="http://tempuri.org/IService/PlayerCreateRoomResponse")]
        System.Threading.Tasks.Task PlayerCreateRoomAsync(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PlayerLeaveRoom", ReplyAction="http://tempuri.org/IService/PlayerLeaveRoomResponse")]
        void PlayerLeaveRoom(string playerName, string roomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PlayerLeaveRoom", ReplyAction="http://tempuri.org/IService/PlayerLeaveRoomResponse")]
        System.Threading.Tasks.Task PlayerLeaveRoomAsync(string playerName, string roomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PlayerLeavePortal", ReplyAction="http://tempuri.org/IService/PlayerLeavePortalResponse")]
        void PlayerLeavePortal(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PlayerLeavePortal", ReplyAction="http://tempuri.org/IService/PlayerLeavePortalResponse")]
        System.Threading.Tasks.Task PlayerLeavePortalAsync(string playerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetHiddenNumber", ReplyAction="http://tempuri.org/IService/GetHiddenNumberResponse")]
        int[] GetHiddenNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetHiddenNumber", ReplyAction="http://tempuri.org/IService/GetHiddenNumberResponse")]
        System.Threading.Tasks.Task<int[]> GetHiddenNumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGuessResults", ReplyAction="http://tempuri.org/IService/GetGuessResultsResponse")]
        string[] GetGuessResults(int[] guessNumbers, string roomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGuessResults", ReplyAction="http://tempuri.org/IService/GetGuessResultsResponse")]
        System.Threading.Tasks.Task<string[]> GetGuessResultsAsync(int[] guessNumbers, string roomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/StartNewGame", ReplyAction="http://tempuri.org/IService/StartNewGameResponse")]
        void StartNewGame(string RoomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/StartNewGame", ReplyAction="http://tempuri.org/IService/StartNewGameResponse")]
        System.Threading.Tasks.Task StartNewGameAsync(string RoomName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : MastermindGameGUI.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<MastermindGameGUI.ServiceReference1.IService>, MastermindGameGUI.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Login(string playerName, string password) {
            return base.Channel.Login(playerName, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string playerName, string password) {
            return base.Channel.LoginAsync(playerName, password);
        }
        
        public void Logout(string playerName) {
            base.Channel.Logout(playerName);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(string playerName) {
            return base.Channel.LogoutAsync(playerName);
        }
        
        public bool RegisterNewPlayer(string name, string pass) {
            return base.Channel.RegisterNewPlayer(name, pass);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterNewPlayerAsync(string name, string pass) {
            return base.Channel.RegisterNewPlayerAsync(name, pass);
        }
        
        public string[] GetRoomList() {
            return base.Channel.GetRoomList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetRoomListAsync() {
            return base.Channel.GetRoomListAsync();
        }
        
        public string[] GetListOfPlayers() {
            return base.Channel.GetListOfPlayers();
        }
        
        public System.Threading.Tasks.Task<string[]> GetListOfPlayersAsync() {
            return base.Channel.GetListOfPlayersAsync();
        }
        
        public string[] GetPlayersInRoom(string RoomName) {
            return base.Channel.GetPlayersInRoom(RoomName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetPlayersInRoomAsync(string RoomName) {
            return base.Channel.GetPlayersInRoomAsync(RoomName);
        }
        
        public bool PlayerJoinRoom(string playerName, string roomName) {
            return base.Channel.PlayerJoinRoom(playerName, roomName);
        }
        
        public System.Threading.Tasks.Task<bool> PlayerJoinRoomAsync(string playerName, string roomName) {
            return base.Channel.PlayerJoinRoomAsync(playerName, roomName);
        }
        
        public void PlayerCreateRoom(string playerName) {
            base.Channel.PlayerCreateRoom(playerName);
        }
        
        public System.Threading.Tasks.Task PlayerCreateRoomAsync(string playerName) {
            return base.Channel.PlayerCreateRoomAsync(playerName);
        }
        
        public void PlayerLeaveRoom(string playerName, string roomName) {
            base.Channel.PlayerLeaveRoom(playerName, roomName);
        }
        
        public System.Threading.Tasks.Task PlayerLeaveRoomAsync(string playerName, string roomName) {
            return base.Channel.PlayerLeaveRoomAsync(playerName, roomName);
        }
        
        public void PlayerLeavePortal(string playerName) {
            base.Channel.PlayerLeavePortal(playerName);
        }
        
        public System.Threading.Tasks.Task PlayerLeavePortalAsync(string playerName) {
            return base.Channel.PlayerLeavePortalAsync(playerName);
        }
        
        public int[] GetHiddenNumber() {
            return base.Channel.GetHiddenNumber();
        }
        
        public System.Threading.Tasks.Task<int[]> GetHiddenNumberAsync() {
            return base.Channel.GetHiddenNumberAsync();
        }
        
        public string[] GetGuessResults(int[] guessNumbers, string roomName) {
            return base.Channel.GetGuessResults(guessNumbers, roomName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetGuessResultsAsync(int[] guessNumbers, string roomName) {
            return base.Channel.GetGuessResultsAsync(guessNumbers, roomName);
        }
        
        public void StartNewGame(string RoomName) {
            base.Channel.StartNewGame(RoomName);
        }
        
        public System.Threading.Tasks.Task StartNewGameAsync(string RoomName) {
            return base.Channel.StartNewGameAsync(RoomName);
        }
    }
}
